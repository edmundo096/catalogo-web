// Debug vars
$debug:         false;
$draw-borders:  $debug;

//noinspection CssUnknownTarget
@import url(https://fonts.googleapis.com/css?family=Open+Sans:400,700,300);

// Small screen / tablet
$screen-sm-min:              768px;
// Medium screen / desktop
$screen-md-min:              992px;
// Large screen / wide desktop
$screen-lg-min:              1200px;
// So media queries don't overlap when required, provide a maximum
$screen-xs-max:              ($screen-sm-min - 1);
$screen-sm-max:              ($screen-md-min - 1);
$screen-md-max:              ($screen-lg-min - 1);


// ngCloak for hidding raw/not processed elements.
[ng\:cloak], [ng-cloak], [data-ng-cloak], [x-ng-cloak], .ng-cloak, .x-ng-cloak {
  display: none !important;
}


// MISC: -----------------------------------------------------------------------------------------------------------
$footer-max-height: 120px;

html {
  // For absolute footer.
  min-height: 100%;
  position: relative;
}
body {
  // For absolute footer.
  padding-bottom: $footer-max-height;

  font-family: 'Open Sans', 'Lato',sans-serif;
}

.fa-btn {
  margin-right: 6px;
}

// Footer: --------------------------------------------------------------------------------------------------------
/* Set the fixed height of the footer here */
#footer {
  // Set the footer to the bottom, regardless if the content flow does not reach the bottom.
  position: absolute;
  bottom: 0;
  width: 100%;

  // Sets a variable height to avoid overflow.
  min-height: 60px;
  max-height: $footer-max-height;

  background-color: #0e1212;
  padding-top:20px;
  padding-bottom:20px;

  // Remove bottom margin from p.
  p { margin-bottom: 0; }
}

// Sections: --------------------------------------------------------------------------------------------------------
// Debug borders
@if ($draw-borders) {
  div {
    border: 1px solid #269abc;
  }
}

// --------------------------------------------------------------------------------------------------------

@function calculate-width-percentage($n-columns, $separation-ptc) {
  $n-separations:         $n-columns - 1;
  $total-separation-ptc:  $separation-ptc * $n-separations;
  $total-columns-ptc:     100% - $total-separation-ptc;
  @return $total-columns-ptc / $n-columns;
}
// Original Category items
.cat-item {
  // 1:1 aspect ratio hack (using padding-bottom = width).
  position: relative;
  a {
    position: absolute;
    top: 0;
    bottom: 0;
    left: 0;
    right: 0;
    background-color: lightskyblue;
    text-align: center;
    //position: relative;
    // Flex: https://css-tricks.com/snippets/css/a-guide-to-flexbox/
    display: flex;
    justify-content: center;
    flex-direction: column;
    span {
      //align-self: center; // Used when direction: row
      display: block;
      // Overwrite any margin and font-size of the icons CSS.
      &:before {
        margin: 0 0 0 0;
        font-size: 450%;
      }
    }
    h1 {
      margin-top: 0;
      font-size: 1em;
      //align-self: flex-end;
      //position: absolute;
      //bottom: 10%;
      //left: 50%;
      //right: 50%;
    }
    // For XXS
    @media (max-width: ($screen-xs-max / 2) + 40px) {
      span:before { font-size: 300%; }
      h1 { margin-top: -10%; font-size: 0.8em; }
    }

    text-decoration: none;
    color: #fff;
    &:hover {
      background-color: lighten(rgb(230, 88, 53), 20%);
      color: lighten(#fff, 10%); // redundant lighten white...
    }
    &:active {
      background-color: darken(rgb(230, 88, 53), 1%);
      transition: all 0.05s ease-out;
      top: -2.5%;
      bottom: -2.5%;
      left: -2.5%;
      right: -2.5%;
    }
  }
  //height: 100px;

  float: left;
  background-color: rgba(230, 88, 53, 0.71);

  // Windows 8 like "Intro transition" (Apply to only those inside the categories container).
  #content-categories & {
    transition-property: opacity, transform;
    transition-duration: 0.4s;
    transition-timing-function: cubic-bezier(0, 0, 0.2, 1);
    &.ng-enter {
      opacity: 0.0;
      transform: scale(0.8, 0.8) translateX(20px);
    }
  }

  $separation-pct: 5%;
  margin-right:   $separation-pct;
  margin-bottom:  $separation-pct;

  // 3 columns for XS.
  @media (max-width: $screen-xs-max) {
    $width: calculate-width-percentage(3, $separation-pct); //30%;
    width: $width;
    padding-bottom: $width;

    &:nth-child(3n+2) { transition-delay: 0.03s; }
    &:nth-child(3n) {   transition-delay: 0.06s;
      margin-right: 0;  // Last one will not have right margin separation.
      @if($debug) { background-color: mediumpurple; }
    }
  }

  // 4 columns fro SM and MD. Combining both min-width and max-width queries.
  @media (min-width: $screen-sm-min) and (max-width: $screen-md-max) {
    $width: calculate-width-percentage(4, $separation-pct); //21.25%;  // (100% - 15%) / 4
    width: $width;
    padding-bottom: $width;

    &:nth-child(4n+2) { transition-delay: 0.03s; }
    &:nth-child(4n+3) { transition-delay: 0.06s; }
    &:nth-child(4n) {   transition-delay: 0.09s;
      margin-right: 0;
      @if($debug) { background-color: orange; }
    }
  }
  // 5 columns for LG.
  @media (min-width: $screen-lg-min) {
    $width: calculate-width-percentage(5, $separation-pct); //16%;     // (100 % - 20 %) / 5
    width: $width;
    padding-bottom: $width;

    &:nth-child(5n+2) { transition-delay: 0.03s; }
    &:nth-child(5n+3) { transition-delay: 0.06s; }
    &:nth-child(5n+4) { transition-delay: 0.09s; }
    &:nth-child(5n) {   transition-delay: 0.12s;
      margin-right: 0;
      @if($debug) { background-color: aquamarine; }
    }
  }

}
